// Code generated by MockGen. DO NOT EDIT.
// Source: core_module/frameworks/database/connection.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
)

// MockIDataBase is a mock of IDataBase interface
type MockIDataBase struct {
	ctrl     *gomock.Controller
	recorder *MockIDataBaseMockRecorder
}

// MockIDataBaseMockRecorder is the mock recorder for MockIDataBase
type MockIDataBaseMockRecorder struct {
	mock *MockIDataBase
}

// NewMockIDataBase creates a new mock instance
func NewMockIDataBase(ctrl *gomock.Controller) *MockIDataBase {
	mock := &MockIDataBase{ctrl: ctrl}
	mock.recorder = &MockIDataBaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDataBase) EXPECT() *MockIDataBaseMockRecorder {
	return m.recorder
}

// Connect mocks base method
func (m *MockIDataBase) Connect() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Connect")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// Connect indicates an expected call of Connect
func (mr *MockIDataBaseMockRecorder) Connect() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Connect", reflect.TypeOf((*MockIDataBase)(nil).Connect))
}
